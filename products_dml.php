<?php

// Data functions (insert, update, delete, form) for table products

// This script and data application were generated by AppGini 5.74
// Download AppGini for free from https://bigprof.com/appgini/download/

function products_insert(){
	global $Translation;

	// mm: can member insert record?
	$arrPerm=getTablePermissions('products');
	if(!$arrPerm[1]){
		return false;
	}

	$data['codebar'] = makeSafe($_REQUEST['codebar']);
		if($data['codebar'] == empty_lookup_value){ $data['codebar'] = ''; }
	$data['productCode'] = makeSafe($_REQUEST['productCode']);
		if($data['productCode'] == empty_lookup_value){ $data['productCode'] = ''; }
	$data['productName'] = makeSafe($_REQUEST['productName']);
		if($data['productName'] == empty_lookup_value){ $data['productName'] = ''; }
	$data['tax'] = makeSafe($_REQUEST['tax']);
		if($data['tax'] == empty_lookup_value){ $data['tax'] = ''; }
	$data['increment'] = makeSafe($_REQUEST['increment']);
		if($data['increment'] == empty_lookup_value){ $data['increment'] = ''; }
	$data['CategoryID'] = makeSafe($_REQUEST['CategoryID']);
		if($data['CategoryID'] == empty_lookup_value){ $data['CategoryID'] = ''; }
	$data['UM'] = makeSafe($_REQUEST['UM']);
		if($data['UM'] == empty_lookup_value){ $data['UM'] = ''; }
	$data['tare'] = makeSafe($_REQUEST['tare']);
		if($data['tare'] == empty_lookup_value){ $data['tare'] = ''; }
	$data['QuantityPerUnit'] = makeSafe($_REQUEST['QuantityPerUnit']);
		if($data['QuantityPerUnit'] == empty_lookup_value){ $data['QuantityPerUnit'] = ''; }
	$data['UnitPrice'] = makeSafe($_REQUEST['UnitPrice']);
		if($data['UnitPrice'] == empty_lookup_value){ $data['UnitPrice'] = ''; }
	$data['sellPrice'] = makeSafe($_REQUEST['sellPrice']);
		if($data['sellPrice'] == empty_lookup_value){ $data['sellPrice'] = ''; }
	$data['UnitsOnOrder'] = makeSafe($_REQUEST['UnitsOnOrder']);
		if($data['UnitsOnOrder'] == empty_lookup_value){ $data['UnitsOnOrder'] = ''; }
	$data['ReorderLevel'] = makeSafe($_REQUEST['ReorderLevel']);
		if($data['ReorderLevel'] == empty_lookup_value){ $data['ReorderLevel'] = ''; }
	$data['Discontinued'] = makeSafe($_REQUEST['Discontinued']);
		if($data['Discontinued'] == empty_lookup_value){ $data['Discontinued'] = ''; }
	$data['manufactured_date'] = intval($_REQUEST['manufactured_dateYear']) . '-' . intval($_REQUEST['manufactured_dateMonth']) . '-' . intval($_REQUEST['manufactured_dateDay']);
	$data['manufactured_date'] = parseMySQLDate($data['manufactured_date'], '<%%creationDate%%>');
	$data['expiry_date'] = intval($_REQUEST['expiry_dateYear']) . '-' . intval($_REQUEST['expiry_dateMonth']) . '-' . intval($_REQUEST['expiry_dateDay']);
	$data['expiry_date'] = parseMySQLDate($data['expiry_date'], '');
	$data['note'] = br2nl(makeSafe($_REQUEST['note']));
	$data['update_date'] = mysql_datetime($_REQUEST['update_date']);
		if($data['update_date'] == empty_lookup_value){ $data['update_date'] = ''; }
	if($data['UnitsOnOrder'] == '') $data['UnitsOnOrder'] = "0";
	if($data['ReorderLevel'] == '') $data['ReorderLevel'] = "0";

	// hook: products_before_insert
	if(function_exists('products_before_insert')){
		$args=array();
		if(!products_before_insert($data, getMemberInfo(), $args)){ return false; }
	}

	$o = array('silentErrors' => true);
	sql('insert into `products` set       `codebar`=' . (($data['codebar'] !== '' && $data['codebar'] !== NULL) ? "'{$data['codebar']}'" : 'NULL') . ', `productCode`=' . (($data['productCode'] !== '' && $data['productCode'] !== NULL) ? "'{$data['productCode']}'" : 'NULL') . ', `productName`=' . (($data['productName'] !== '' && $data['productName'] !== NULL) ? "'{$data['productName']}'" : 'NULL') . ', `tax`=' . (($data['tax'] !== '' && $data['tax'] !== NULL) ? "'{$data['tax']}'" : 'NULL') . ', `increment`=' . (($data['increment'] !== '' && $data['increment'] !== NULL) ? "'{$data['increment']}'" : 'NULL') . ', `CategoryID`=' . (($data['CategoryID'] !== '' && $data['CategoryID'] !== NULL) ? "'{$data['CategoryID']}'" : 'NULL') . ', `UM`=' . (($data['UM'] !== '' && $data['UM'] !== NULL) ? "'{$data['UM']}'" : 'NULL') . ', `tare`=' . (($data['tare'] !== '' && $data['tare'] !== NULL) ? "'{$data['tare']}'" : 'NULL') . ', `UnitPrice`=' . (($data['UnitPrice'] !== '' && $data['UnitPrice'] !== NULL) ? "'{$data['UnitPrice']}'" : 'NULL') . ', `sellPrice`=' . (($data['sellPrice'] !== '' && $data['sellPrice'] !== NULL) ? "'{$data['sellPrice']}'" : 'NULL') . ', `Discontinued`=' . (($data['Discontinued'] !== '' && $data['Discontinued'] !== NULL) ? "'{$data['Discontinued']}'" : 'NULL') . ', `manufactured_date`=' . (($data['manufactured_date'] !== '' && $data['manufactured_date'] !== NULL) ? "'{$data['manufactured_date']}'" : 'NULL') . ', `expiry_date`=' . (($data['expiry_date'] !== '' && $data['expiry_date'] !== NULL) ? "'{$data['expiry_date']}'" : 'NULL') . ', `note`=' . (($data['note'] !== '' && $data['note'] !== NULL) ? "'{$data['note']}'" : 'NULL') . ', `update_date`=' . (($data['update_date'] !== '' && $data['update_date'] !== NULL) ? "'{$data['update_date']}'" : 'NULL'), $o);
	if($o['error']!=''){
		echo $o['error'];
		echo "<a href=\"products_view.php?addNew_x=1\">{$Translation['< back']}</a>";
		exit;
	}

	$recID = db_insert_id(db_link());

	// hook: products_after_insert
	if(function_exists('products_after_insert')){
		$res = sql("select * from `products` where `id`='" . makeSafe($recID, false) . "' limit 1", $eo);
		if($row = db_fetch_assoc($res)){
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = makeSafe($recID, false);
		$args=array();
		if(!products_after_insert($data, getMemberInfo(), $args)){ return $recID; }
	}

	// mm: save ownership data
	set_record_owner('products', $recID, getLoggedMemberID());

	return $recID;
}

function products_delete($selected_id, $AllowDeleteOfParents=false, $skipChecks=false){
	// insure referential integrity ...
	global $Translation;
	$selected_id=makeSafe($selected_id);

	// mm: can member delete record?
	$arrPerm=getTablePermissions('products');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='products' and pkValue='$selected_id'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='products' and pkValue='$selected_id'");
	if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3){ // allow delete?
		// delete allowed, so continue ...
	}else{
		return $Translation['You don\'t have enough permissions to delete this record'];
	}

	// hook: products_before_delete
	if(function_exists('products_before_delete')){
		$args=array();
		if(!products_before_delete($selected_id, $skipChecks, getMemberInfo(), $args))
			return $Translation['Couldn\'t delete this record'];
	}

	// child table: ordersDetails
	$res = sql("select `id` from `products` where `id`='$selected_id'", $eo);
	$id = db_fetch_row($res);
	$rires = sql("select count(1) from `ordersDetails` where `productCode`='".addslashes($id[0])."'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "ordersDetails", $RetMsg);
		return $RetMsg;
	}elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["confirm delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "ordersDetails", $RetMsg);
		$RetMsg = str_replace("<Delete>", "<input type=\"button\" class=\"button\" value=\"".$Translation['yes']."\" onClick=\"window.location='products_view.php?SelectedID=".urlencode($selected_id)."&delete_x=1&confirmed=1';\">", $RetMsg);
		$RetMsg = str_replace("<Cancel>", "<input type=\"button\" class=\"button\" value=\"".$Translation['no']."\" onClick=\"window.location='products_view.php?SelectedID=".urlencode($selected_id)."';\">", $RetMsg);
		return $RetMsg;
	}

	// child table: attributes
	$res = sql("select `id` from `products` where `id`='$selected_id'", $eo);
	$id = db_fetch_row($res);
	$rires = sql("select count(1) from `attributes` where `products`='".addslashes($id[0])."'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "attributes", $RetMsg);
		return $RetMsg;
	}elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["confirm delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "attributes", $RetMsg);
		$RetMsg = str_replace("<Delete>", "<input type=\"button\" class=\"button\" value=\"".$Translation['yes']."\" onClick=\"window.location='products_view.php?SelectedID=".urlencode($selected_id)."&delete_x=1&confirmed=1';\">", $RetMsg);
		$RetMsg = str_replace("<Cancel>", "<input type=\"button\" class=\"button\" value=\"".$Translation['no']."\" onClick=\"window.location='products_view.php?SelectedID=".urlencode($selected_id)."';\">", $RetMsg);
		return $RetMsg;
	}

	sql("delete from `products` where `id`='$selected_id'", $eo);

	// hook: products_after_delete
	if(function_exists('products_after_delete')){
		$args=array();
		products_after_delete($selected_id, getMemberInfo(), $args);
	}

	// mm: delete ownership data
	sql("delete from membership_userrecords where tableName='products' and pkValue='$selected_id'", $eo);
}

function products_update($selected_id){
	global $Translation;

	// mm: can member edit record?
	$arrPerm=getTablePermissions('products');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='products' and pkValue='".makeSafe($selected_id)."'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='products' and pkValue='".makeSafe($selected_id)."'");
	if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3){ // allow update?
		// update allowed, so continue ...
	}else{
		return false;
	}

	$data['codebar'] = makeSafe($_REQUEST['codebar']);
		if($data['codebar'] == empty_lookup_value){ $data['codebar'] = ''; }
	$data['productCode'] = makeSafe($_REQUEST['productCode']);
		if($data['productCode'] == empty_lookup_value){ $data['productCode'] = ''; }
	$data['productName'] = makeSafe($_REQUEST['productName']);
		if($data['productName'] == empty_lookup_value){ $data['productName'] = ''; }
	$data['tax'] = makeSafe($_REQUEST['tax']);
		if($data['tax'] == empty_lookup_value){ $data['tax'] = ''; }
	$data['increment'] = makeSafe($_REQUEST['increment']);
		if($data['increment'] == empty_lookup_value){ $data['increment'] = ''; }
	$data['CategoryID'] = makeSafe($_REQUEST['CategoryID']);
		if($data['CategoryID'] == empty_lookup_value){ $data['CategoryID'] = ''; }
	$data['UM'] = makeSafe($_REQUEST['UM']);
		if($data['UM'] == empty_lookup_value){ $data['UM'] = ''; }
	$data['tare'] = makeSafe($_REQUEST['tare']);
		if($data['tare'] == empty_lookup_value){ $data['tare'] = ''; }
	$data['QuantityPerUnit'] = makeSafe($_REQUEST['QuantityPerUnit']);
		if($data['QuantityPerUnit'] == empty_lookup_value){ $data['QuantityPerUnit'] = ''; }
	$data['UnitPrice'] = makeSafe($_REQUEST['UnitPrice']);
		if($data['UnitPrice'] == empty_lookup_value){ $data['UnitPrice'] = ''; }
	$data['sellPrice'] = makeSafe($_REQUEST['sellPrice']);
		if($data['sellPrice'] == empty_lookup_value){ $data['sellPrice'] = ''; }
	$data['UnitsOnOrder'] = makeSafe($_REQUEST['UnitsOnOrder']);
		if($data['UnitsOnOrder'] == empty_lookup_value){ $data['UnitsOnOrder'] = ''; }
	$data['ReorderLevel'] = makeSafe($_REQUEST['ReorderLevel']);
		if($data['ReorderLevel'] == empty_lookup_value){ $data['ReorderLevel'] = ''; }
	$data['Discontinued'] = makeSafe($_REQUEST['Discontinued']);
		if($data['Discontinued'] == empty_lookup_value){ $data['Discontinued'] = ''; }
	$data['manufactured_date'] = intval($_REQUEST['manufactured_dateYear']) . '-' . intval($_REQUEST['manufactured_dateMonth']) . '-' . intval($_REQUEST['manufactured_dateDay']);
	$data['manufactured_date'] = parseMySQLDate($data['manufactured_date'], '<%%creationDate%%>');
	$data['expiry_date'] = intval($_REQUEST['expiry_dateYear']) . '-' . intval($_REQUEST['expiry_dateMonth']) . '-' . intval($_REQUEST['expiry_dateDay']);
	$data['expiry_date'] = parseMySQLDate($data['expiry_date'], '');
	$data['note'] = br2nl(makeSafe($_REQUEST['note']));
	$data['update_date'] = mysql_datetime($_REQUEST['update_date']);
		if($data['update_date'] == empty_lookup_value){ $data['update_date'] = ''; }
	$data['selectedID']=makeSafe($selected_id);

	// hook: products_before_update
	if(function_exists('products_before_update')){
		$args=array();
		if(!products_before_update($data, getMemberInfo(), $args)){ return false; }
	}

	$o=array('silentErrors' => true);
	sql('update `products` set       `codebar`=' . (($data['codebar'] !== '' && $data['codebar'] !== NULL) ? "'{$data['codebar']}'" : 'NULL') . ', `productCode`=' . (($data['productCode'] !== '' && $data['productCode'] !== NULL) ? "'{$data['productCode']}'" : 'NULL') . ', `productName`=' . (($data['productName'] !== '' && $data['productName'] !== NULL) ? "'{$data['productName']}'" : 'NULL') . ', `tax`=' . (($data['tax'] !== '' && $data['tax'] !== NULL) ? "'{$data['tax']}'" : 'NULL') . ', `increment`=' . (($data['increment'] !== '' && $data['increment'] !== NULL) ? "'{$data['increment']}'" : 'NULL') . ', `CategoryID`=' . (($data['CategoryID'] !== '' && $data['CategoryID'] !== NULL) ? "'{$data['CategoryID']}'" : 'NULL') . ', `UM`=' . (($data['UM'] !== '' && $data['UM'] !== NULL) ? "'{$data['UM']}'" : 'NULL') . ', `tare`=' . (($data['tare'] !== '' && $data['tare'] !== NULL) ? "'{$data['tare']}'" : 'NULL') . ', `UnitPrice`=' . (($data['UnitPrice'] !== '' && $data['UnitPrice'] !== NULL) ? "'{$data['UnitPrice']}'" : 'NULL') . ', `sellPrice`=' . (($data['sellPrice'] !== '' && $data['sellPrice'] !== NULL) ? "'{$data['sellPrice']}'" : 'NULL') . ', `Discontinued`=' . (($data['Discontinued'] !== '' && $data['Discontinued'] !== NULL) ? "'{$data['Discontinued']}'" : 'NULL') . ', `manufactured_date`=' . (($data['manufactured_date'] !== '' && $data['manufactured_date'] !== NULL) ? "'{$data['manufactured_date']}'" : 'NULL') . ', `expiry_date`=' . (($data['expiry_date'] !== '' && $data['expiry_date'] !== NULL) ? "'{$data['expiry_date']}'" : 'NULL') . ', `note`=' . (($data['note'] !== '' && $data['note'] !== NULL) ? "'{$data['note']}'" : 'NULL') . ', `update_date`=' . (($data['update_date'] !== '' && $data['update_date'] !== NULL) ? "'{$data['update_date']}'" : 'NULL') . " where `id`='".makeSafe($selected_id)."'", $o);
	if($o['error']!=''){
		echo $o['error'];
		echo '<a href="products_view.php?SelectedID='.urlencode($selected_id)."\">{$Translation['< back']}</a>";
		exit;
	}


	// hook: products_after_update
	if(function_exists('products_after_update')){
		$res = sql("SELECT * FROM `products` WHERE `id`='{$data['selectedID']}' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)){
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = $data['id'];
		$args = array();
		if(!products_after_update($data, getMemberInfo(), $args)){ return; }
	}

	// mm: update ownership data
	sql("update membership_userrecords set dateUpdated='".time()."' where tableName='products' and pkValue='".makeSafe($selected_id)."'", $eo);

}

function products_form($selected_id = '', $AllowUpdate = 1, $AllowInsert = 1, $AllowDelete = 1, $ShowCancel = 0, $TemplateDV = '', $TemplateDVP = ''){
	// function to return an editable form for a table records
	// and fill it with data of record whose ID is $selected_id. If $selected_id
	// is empty, an empty form is shown, with only an 'Add New'
	// button displayed.

	global $Translation;

	// mm: get table permissions
	$arrPerm=getTablePermissions('products');
	if(!$arrPerm[1] && $selected_id==''){ return ''; }
	$AllowInsert = ($arrPerm[1] ? true : false);
	// print preview?
	$dvprint = false;
	if($selected_id && $_REQUEST['dvprint_x'] != ''){
		$dvprint = true;
	}

	$filterer_tax = thisOr(undo_magic_quotes($_REQUEST['filterer_tax']), '');
	$filterer_CategoryID = thisOr(undo_magic_quotes($_REQUEST['filterer_CategoryID']), '');

	// populate filterers, starting from children to grand-parents

	// unique random identifier
	$rnd1 = ($dvprint ? rand(1000000, 9999999) : '');
	// combobox: tax
	$combo_tax = new DataCombo;
	// combobox: CategoryID
	$combo_CategoryID = new DataCombo;
	// combobox: UM
	$combo_UM = new Combo;
	$combo_UM->ListType = 0;
	$combo_UM->MultipleSeparator = ', ';
	$combo_UM->ListBoxHeight = 10;
	$combo_UM->RadiosPerLine = 1;
	if(is_file(dirname(__FILE__).'/hooks/products.UM.csv')){
		$UM_data = addslashes(implode('', @file(dirname(__FILE__).'/hooks/products.UM.csv')));
		$combo_UM->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions($UM_data)));
		$combo_UM->ListData = $combo_UM->ListItem;
	}else{
		$combo_UM->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions("Kg;;Lt;;Pz;;Un;;Sc")));
		$combo_UM->ListData = $combo_UM->ListItem;
	}
	$combo_UM->SelectName = 'UM';
	// combobox: manufactured_date
	$combo_manufactured_date = new DateCombo;
	$combo_manufactured_date->DateFormat = "ymd";
	$combo_manufactured_date->MinYear = 1900;
	$combo_manufactured_date->MaxYear = 2100;
	$combo_manufactured_date->DefaultDate = parseMySQLDate('<%%creationDate%%>', '<%%creationDate%%>');
	$combo_manufactured_date->MonthNames = $Translation['month names'];
	$combo_manufactured_date->NamePrefix = 'manufactured_date';
	// combobox: expiry_date
	$combo_expiry_date = new DateCombo;
	$combo_expiry_date->DateFormat = "ymd";
	$combo_expiry_date->MinYear = 1900;
	$combo_expiry_date->MaxYear = 2100;
	$combo_expiry_date->DefaultDate = parseMySQLDate('', '');
	$combo_expiry_date->MonthNames = $Translation['month names'];
	$combo_expiry_date->NamePrefix = 'expiry_date';

	if($selected_id){
		// mm: check member permissions
		if(!$arrPerm[2]){
			return "";
		}
		// mm: who is the owner?
		$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='products' and pkValue='".makeSafe($selected_id)."'");
		$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='products' and pkValue='".makeSafe($selected_id)."'");
		if($arrPerm[2]==1 && getLoggedMemberID()!=$ownerMemberID){
			return "";
		}
		if($arrPerm[2]==2 && getLoggedGroupID()!=$ownerGroupID){
			return "";
		}

		// can edit?
		if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3){
			$AllowUpdate=1;
		}else{
			$AllowUpdate=0;
		}

		$res = sql("select * from `products` where `id`='".makeSafe($selected_id)."'", $eo);
		if(!($row = db_fetch_array($res))){
			return error_message($Translation['No records found'], 'products_view.php', false);
		}
		$urow = $row; /* unsanitized data */
		$hc = new CI_Input();
		$row = $hc->xss_clean($row); /* sanitize data */
		$combo_tax->SelectedData = $row['tax'];
		$combo_CategoryID->SelectedData = $row['CategoryID'];
		$combo_UM->SelectedData = $row['UM'];
		$combo_manufactured_date->DefaultDate = $row['manufactured_date'];
		$combo_expiry_date->DefaultDate = $row['expiry_date'];
	}else{
		$combo_tax->SelectedData = $filterer_tax;
		$combo_CategoryID->SelectedData = $filterer_CategoryID;
		$combo_UM->SelectedText = ( $_REQUEST['FilterField'][1]=='8' && $_REQUEST['FilterOperator'][1]=='<=>' ? (get_magic_quotes_gpc() ? stripslashes($_REQUEST['FilterValue'][1]) : $_REQUEST['FilterValue'][1]) : "");
	}
	$combo_tax->HTML = '<span id="tax-container' . $rnd1 . '"></span><input type="hidden" name="tax" id="tax' . $rnd1 . '" value="' . html_attr($combo_tax->SelectedData) . '">';
	$combo_tax->MatchText = '<span id="tax-container-readonly' . $rnd1 . '"></span><input type="hidden" name="tax" id="tax' . $rnd1 . '" value="' . html_attr($combo_tax->SelectedData) . '">';
	$combo_CategoryID->HTML = '<span id="CategoryID-container' . $rnd1 . '"></span><input type="hidden" name="CategoryID" id="CategoryID' . $rnd1 . '" value="' . html_attr($combo_CategoryID->SelectedData) . '">';
	$combo_CategoryID->MatchText = '<span id="CategoryID-container-readonly' . $rnd1 . '"></span><input type="hidden" name="CategoryID" id="CategoryID' . $rnd1 . '" value="' . html_attr($combo_CategoryID->SelectedData) . '">';
	$combo_UM->Render();

	ob_start();
	?>

	<script>
		// initial lookup values
		AppGini.current_tax__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['tax'] : $filterer_tax); ?>"};
		AppGini.current_CategoryID__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['CategoryID'] : $filterer_CategoryID); ?>"};

		jQuery(function() {
			setTimeout(function(){
				if(typeof(tax_reload__RAND__) == 'function') tax_reload__RAND__();
				if(typeof(CategoryID_reload__RAND__) == 'function') CategoryID_reload__RAND__();
			}, 10); /* we need to slightly delay client-side execution of the above code to allow AppGini.ajaxCache to work */
		});
		function tax_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#tax-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_tax__RAND__.value, t: 'products', f: 'tax' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="tax"]').val(resp.results[0].id);
							$j('[id=tax-container-readonly__RAND__]').html('<span id="tax-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=kinds_view_parent]').hide(); }else{ $j('.btn[id=kinds_view_parent]').show(); }


							if(typeof(tax_update_autofills__RAND__) == 'function') tax_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ /* */ return { s: term, p: page, t: 'products', f: 'tax' }; },
					results: function(resp, page){ /* */ return resp; }
				},
				escapeMarkup: function(str){ /* */ return str; }
			}).on('change', function(e){
				AppGini.current_tax__RAND__.value = e.added.id;
				AppGini.current_tax__RAND__.text = e.added.text;
				$j('[name="tax"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=kinds_view_parent]').hide(); }else{ $j('.btn[id=kinds_view_parent]').show(); }


				if(typeof(tax_update_autofills__RAND__) == 'function') tax_update_autofills__RAND__();
			});

			if(!$j("#tax-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_tax__RAND__.value, t: 'products', f: 'tax' },
					success: function(resp){
						$j('[name="tax"]').val(resp.results[0].id);
						$j('[id=tax-container-readonly__RAND__]').html('<span id="tax-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=kinds_view_parent]').hide(); }else{ $j('.btn[id=kinds_view_parent]').show(); }

						if(typeof(tax_update_autofills__RAND__) == 'function') tax_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_tax__RAND__.value, t: 'products', f: 'tax' },
				success: function(resp){
					$j('[id=tax-container__RAND__], [id=tax-container-readonly__RAND__]').html('<span id="tax-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=kinds_view_parent]').hide(); }else{ $j('.btn[id=kinds_view_parent]').show(); }

					if(typeof(tax_update_autofills__RAND__) == 'function') tax_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function CategoryID_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#CategoryID-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_CategoryID__RAND__.value, t: 'products', f: 'CategoryID' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="CategoryID"]').val(resp.results[0].id);
							$j('[id=CategoryID-container-readonly__RAND__]').html('<span id="CategoryID-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=kinds_view_parent]').hide(); }else{ $j('.btn[id=kinds_view_parent]').show(); }


							if(typeof(CategoryID_update_autofills__RAND__) == 'function') CategoryID_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ /* */ return { s: term, p: page, t: 'products', f: 'CategoryID' }; },
					results: function(resp, page){ /* */ return resp; }
				},
				escapeMarkup: function(str){ /* */ return str; }
			}).on('change', function(e){
				AppGini.current_CategoryID__RAND__.value = e.added.id;
				AppGini.current_CategoryID__RAND__.text = e.added.text;
				$j('[name="CategoryID"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=kinds_view_parent]').hide(); }else{ $j('.btn[id=kinds_view_parent]').show(); }


				if(typeof(CategoryID_update_autofills__RAND__) == 'function') CategoryID_update_autofills__RAND__();
			});

			if(!$j("#CategoryID-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_CategoryID__RAND__.value, t: 'products', f: 'CategoryID' },
					success: function(resp){
						$j('[name="CategoryID"]').val(resp.results[0].id);
						$j('[id=CategoryID-container-readonly__RAND__]').html('<span id="CategoryID-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=kinds_view_parent]').hide(); }else{ $j('.btn[id=kinds_view_parent]').show(); }

						if(typeof(CategoryID_update_autofills__RAND__) == 'function') CategoryID_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_CategoryID__RAND__.value, t: 'products', f: 'CategoryID' },
				success: function(resp){
					$j('[id=CategoryID-container__RAND__], [id=CategoryID-container-readonly__RAND__]').html('<span id="CategoryID-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=kinds_view_parent]').hide(); }else{ $j('.btn[id=kinds_view_parent]').show(); }

					if(typeof(CategoryID_update_autofills__RAND__) == 'function') CategoryID_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
	</script>
	<?php

	$lookups = str_replace('__RAND__', $rnd1, ob_get_contents());
	ob_end_clean();


	// code for template based detail view forms

	// open the detail view template
	if($dvprint){
		$template_file = is_file("./{$TemplateDVP}") ? "./{$TemplateDVP}" : './templates/products_templateDVP.html';
		$templateCode = @file_get_contents($template_file);
	}else{
		$template_file = is_file("./{$TemplateDV}") ? "./{$TemplateDV}" : './templates/products_templateDV.html';
		$templateCode = @file_get_contents($template_file);
	}

	// process form title
	$templateCode = str_replace('<%%DETAIL_VIEW_TITLE%%>', 'Dettaglio ordini In, ordini Out, lotti', $templateCode);
	$templateCode = str_replace('<%%RND1%%>', $rnd1, $templateCode);
	$templateCode = str_replace('<%%EMBEDDED%%>', ($_REQUEST['Embedded'] ? 'Embedded=1' : ''), $templateCode);
	// process buttons
	if($AllowInsert){
		if(!$selected_id) $templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-success" id="insert" name="insert_x" value="1" onclick="return products_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save New'] . '</button>', $templateCode);
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="insert" name="insert_x" value="1" onclick="return products_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save As Copy'] . '</button>', $templateCode);
	}else{
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '', $templateCode);
	}

	// 'Back' button action
	if($_REQUEST['Embedded']){
		$backAction = 'AppGini.closeParentModal(); return false;';
	}else{
		$backAction = '$j(\'form\').eq(0).attr(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;';
	}

	if($selected_id){
		if(!$_REQUEST['Embedded']) $templateCode = str_replace('<%%DVPRINT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="dvprint" name="dvprint_x" value="1" onclick="$j(\'form\').eq(0).prop(\'novalidate\', true); document.myform.reset(); return true;" title="' . html_attr($Translation['Print Preview']) . '"><i class="glyphicon glyphicon-print"></i> ' . $Translation['Print Preview'] . '</button>', $templateCode);
		if($AllowUpdate){
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '<button type="submit" class="btn btn-success btn-lg" id="update" name="update_x" value="1" onclick="return products_validateData();" title="' . html_attr($Translation['Save Changes']) . '"><i class="glyphicon glyphicon-ok"></i> ' . $Translation['Save Changes'] . '</button>', $templateCode);
		}else{
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		}
		if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3){ // allow delete?
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '<button type="submit" class="btn btn-danger" id="delete" name="delete_x" value="1" onclick="return confirm(\'' . $Translation['are you sure?'] . '\');" title="' . html_attr($Translation['Delete']) . '"><i class="glyphicon glyphicon-trash"></i> ' . $Translation['Delete'] . '</button>', $templateCode);
		}else{
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		}
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>', $templateCode);
	}else{
		$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', ($ShowCancel ? '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>' : ''), $templateCode);
	}

	// set records to read only if user can't insert new records and can't edit current record
	if(($selected_id && !$AllowUpdate && !$AllowInsert) || (!$selected_id && !$AllowInsert)){
		$jsReadOnly .= "\tjQuery('#codebar').replaceWith('<div class=\"form-control-static\" id=\"codebar\">' + (jQuery('#codebar').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#productCode').replaceWith('<div class=\"form-control-static\" id=\"productCode\">' + (jQuery('#productCode').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#productName').replaceWith('<div class=\"form-control-static\" id=\"productName\">' + (jQuery('#productName').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#tax').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#tax_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#increment').replaceWith('<div class=\"form-control-static\" id=\"increment\">' + (jQuery('#increment').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#CategoryID').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#CategoryID_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#UM').replaceWith('<div class=\"form-control-static\" id=\"UM\">' + (jQuery('#UM').val() || '') + '</div>'); jQuery('#UM-multi-selection-help').hide();\n";
		$jsReadOnly .= "\tjQuery('#tare').replaceWith('<div class=\"form-control-static\" id=\"tare\">' + (jQuery('#tare').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#UnitPrice').replaceWith('<div class=\"form-control-static\" id=\"UnitPrice\">' + (jQuery('#UnitPrice').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#sellPrice').replaceWith('<div class=\"form-control-static\" id=\"sellPrice\">' + (jQuery('#sellPrice').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#Discontinued').prop('disabled', true);\n";
		$jsReadOnly .= "\tjQuery('#manufactured_date').prop('readonly', true);\n";
		$jsReadOnly .= "\tjQuery('#manufactured_dateDay, #manufactured_dateMonth, #manufactured_dateYear').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#expiry_date').prop('readonly', true);\n";
		$jsReadOnly .= "\tjQuery('#expiry_dateDay, #expiry_dateMonth, #expiry_dateYear').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#note').replaceWith('<div class=\"form-control-static\" id=\"note\">' + (jQuery('#note').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#update_date').parents('.input-group').replaceWith('<div class=\"form-control-static\" id=\"update_date\">' + (jQuery('#update_date').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('.select2-container').hide();\n";

		$noUploads = true;
	}elseif($AllowInsert){
		$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', true);"; // temporarily disable form change handler
		$locale = isset($Translation['datetimepicker locale']) ? ", locale: '{$Translation['datetimepicker locale']}'" : '';
		$jsEditable .= "\tjQuery('#update_date').addClass('always_shown').parents('.input-group').datetimepicker({ toolbarPlacement: 'top', sideBySide: true, showClear: true, showTodayButton: true, showClose: true, icons: { close: 'glyphicon glyphicon-ok' }, format: AppGini.datetimeFormat('dt') {$locale} });";
			$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', false);"; // re-enable form change handler
	}

	// process combos
	$templateCode = str_replace('<%%COMBO(tax)%%>', $combo_tax->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(tax)%%>', $combo_tax->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(tax)%%>', urlencode($combo_tax->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(CategoryID)%%>', $combo_CategoryID->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(CategoryID)%%>', $combo_CategoryID->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(CategoryID)%%>', urlencode($combo_CategoryID->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(UM)%%>', $combo_UM->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(UM)%%>', $combo_UM->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(manufactured_date)%%>', ($selected_id && !$arrPerm[3] ? '<div class="form-control-static">' . $combo_manufactured_date->GetHTML(true) . '</div>' : $combo_manufactured_date->GetHTML()), $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(manufactured_date)%%>', $combo_manufactured_date->GetHTML(true), $templateCode);
	$templateCode = str_replace('<%%COMBO(expiry_date)%%>', ($selected_id && !$arrPerm[3] ? '<div class="form-control-static">' . $combo_expiry_date->GetHTML(true) . '</div>' : $combo_expiry_date->GetHTML()), $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(expiry_date)%%>', $combo_expiry_date->GetHTML(true), $templateCode);

	/* lookup fields array: 'lookup field name' => array('parent table name', 'lookup field caption') */
	$lookup_fields = array(  'tax' => array('kinds', 'Aliquota'), 'CategoryID' => array('kinds', 'Categoria'));
	foreach($lookup_fields as $luf => $ptfc){
		$pt_perm = getTablePermissions($ptfc[0]);

		// process foreign key links
		if($pt_perm['view'] || $pt_perm['edit']){
			$templateCode = str_replace("<%%PLINK({$luf})%%>", '<button type="button" class="btn btn-default view_parent hspacer-md" id="' . $ptfc[0] . '_view_parent" title="' . html_attr($Translation['View'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-eye-open"></i></button>', $templateCode);
		}

		// if user has insert permission to parent table of a lookup field, put an add new button
		if($pt_perm['insert'] && !$_REQUEST['Embedded']){
			$templateCode = str_replace("<%%ADDNEW({$ptfc[0]})%%>", '<button type="button" class="btn btn-success add_new_parent hspacer-md" id="' . $ptfc[0] . '_add_new" title="' . html_attr($Translation['Add New'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-plus-sign"></i></button>', $templateCode);
		}
	}

	// process images
	$templateCode = str_replace('<%%UPLOADFILE(id)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(codebar)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(productCode)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(productName)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(tax)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(increment)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(CategoryID)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(UM)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(tare)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(QuantityPerUnit)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(UnitPrice)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(sellPrice)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(UnitsInStock)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(UnitsOnOrder)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(ReorderLevel)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(balance)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Discontinued)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(manufactured_date)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(expiry_date)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(note)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(update_date)%%>', '', $templateCode);

	// process values
	if($selected_id){
		if( $dvprint) $templateCode = str_replace('<%%VALUE(id)%%>', safe_html($urow['id']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(id)%%>', html_attr($row['id']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(id)%%>', urlencode($urow['id']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(codebar)%%>', safe_html($urow['codebar']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(codebar)%%>', html_attr($row['codebar']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(codebar)%%>', urlencode($urow['codebar']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(productCode)%%>', safe_html($urow['productCode']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(productCode)%%>', html_attr($row['productCode']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(productCode)%%>', urlencode($urow['productCode']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(productName)%%>', safe_html($urow['productName']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(productName)%%>', html_attr($row['productName']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(productName)%%>', urlencode($urow['productName']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(tax)%%>', safe_html($urow['tax']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(tax)%%>', html_attr($row['tax']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(tax)%%>', urlencode($urow['tax']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(increment)%%>', safe_html($urow['increment']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(increment)%%>', html_attr($row['increment']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(increment)%%>', urlencode($urow['increment']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(CategoryID)%%>', safe_html($urow['CategoryID']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(CategoryID)%%>', html_attr($row['CategoryID']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(CategoryID)%%>', urlencode($urow['CategoryID']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(UM)%%>', safe_html($urow['UM']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(UM)%%>', html_attr($row['UM']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(UM)%%>', urlencode($urow['UM']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(tare)%%>', safe_html($urow['tare']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(tare)%%>', html_attr($row['tare']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(tare)%%>', urlencode($urow['tare']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(QuantityPerUnit)%%>', safe_html($urow['QuantityPerUnit']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(QuantityPerUnit)%%>', html_attr($row['QuantityPerUnit']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(QuantityPerUnit)%%>', urlencode($urow['QuantityPerUnit']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(UnitPrice)%%>', safe_html($urow['UnitPrice']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(UnitPrice)%%>', html_attr($row['UnitPrice']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(UnitPrice)%%>', urlencode($urow['UnitPrice']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(sellPrice)%%>', safe_html($urow['sellPrice']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(sellPrice)%%>', html_attr($row['sellPrice']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(sellPrice)%%>', urlencode($urow['sellPrice']), $templateCode);
		$templateCode = str_replace('<%%VALUE(UnitsInStock)%%>', safe_html($urow['UnitsInStock']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(UnitsInStock)%%>', urlencode($urow['UnitsInStock']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(UnitsOnOrder)%%>', safe_html($urow['UnitsOnOrder']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(UnitsOnOrder)%%>', html_attr($row['UnitsOnOrder']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(UnitsOnOrder)%%>', urlencode($urow['UnitsOnOrder']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(ReorderLevel)%%>', safe_html($urow['ReorderLevel']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(ReorderLevel)%%>', html_attr($row['ReorderLevel']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(ReorderLevel)%%>', urlencode($urow['ReorderLevel']), $templateCode);
		$templateCode = str_replace('<%%VALUE(balance)%%>', safe_html($urow['balance']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(balance)%%>', urlencode($urow['balance']), $templateCode);
		$templateCode = str_replace('<%%CHECKED(Discontinued)%%>', ($row['Discontinued'] ? "checked" : ""), $templateCode);
		$templateCode = str_replace('<%%VALUE(manufactured_date)%%>', @date('Y-m-d', @strtotime(html_attr($row['manufactured_date']))), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(manufactured_date)%%>', urlencode(@date('Y-m-d', @strtotime(html_attr($urow['manufactured_date'])))), $templateCode);
		$templateCode = str_replace('<%%VALUE(expiry_date)%%>', @date('Y-m-d', @strtotime(html_attr($row['expiry_date']))), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(expiry_date)%%>', urlencode(@date('Y-m-d', @strtotime(html_attr($urow['expiry_date'])))), $templateCode);
		if($dvprint || (!$AllowUpdate && !$AllowInsert)){
			$templateCode = str_replace('<%%VALUE(note)%%>', safe_html($urow['note']), $templateCode);
		}else{
			$templateCode = str_replace('<%%VALUE(note)%%>', html_attr($row['note']), $templateCode);
		}
		$templateCode = str_replace('<%%URLVALUE(note)%%>', urlencode($urow['note']), $templateCode);
		$templateCode = str_replace('<%%VALUE(update_date)%%>', app_datetime($row['update_date'], 'dt'), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(update_date)%%>', urlencode(app_datetime($urow['update_date'], 'dt')), $templateCode);
	}else{
		$templateCode = str_replace('<%%VALUE(id)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(id)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(codebar)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(codebar)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(productCode)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(productCode)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(productName)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(productName)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(tax)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(tax)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(increment)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(increment)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(CategoryID)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(CategoryID)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(UM)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(UM)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(tare)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(tare)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(QuantityPerUnit)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(QuantityPerUnit)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(UnitPrice)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(UnitPrice)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(sellPrice)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(sellPrice)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(UnitsInStock)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(UnitsInStock)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(UnitsOnOrder)%%>', '0', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(UnitsOnOrder)%%>', urlencode('0'), $templateCode);
		$templateCode = str_replace('<%%VALUE(ReorderLevel)%%>', '0', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(ReorderLevel)%%>', urlencode('0'), $templateCode);
		$templateCode = str_replace('<%%VALUE(balance)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(balance)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%CHECKED(Discontinued)%%>', '', $templateCode);
		$templateCode = str_replace('<%%VALUE(manufactured_date)%%>', '<%%creationDate%%>', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(manufactured_date)%%>', urlencode('<%%creationDate%%>'), $templateCode);
		$templateCode = str_replace('<%%VALUE(expiry_date)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(expiry_date)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(note)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(note)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(update_date)%%>', '<%%editingDateTime%%>', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(update_date)%%>', urlencode('<%%editingDateTime%%>'), $templateCode);
	}

	// process translations
	foreach($Translation as $symbol=>$trans){
		$templateCode = str_replace("<%%TRANSLATION($symbol)%%>", $trans, $templateCode);
	}

	// clear scrap
	$templateCode = str_replace('<%%', '<!-- ', $templateCode);
	$templateCode = str_replace('%%>', ' -->', $templateCode);

	// hide links to inaccessible tables
	if($_REQUEST['dvprint_x'] == ''){
		$templateCode .= "\n\n<script>\$j(function(){\n";
		$arrTables = getTableList();
		foreach($arrTables as $name => $caption){
			$templateCode .= "\t\$j('#{$name}_link').removeClass('hidden');\n";
			$templateCode .= "\t\$j('#xs_{$name}_link').removeClass('hidden');\n";
		}

		$templateCode .= $jsReadOnly;
		$templateCode .= $jsEditable;

		if(!$selected_id){
		}

		$templateCode.="\n});</script>\n";
	}

	// ajaxed auto-fill fields
	$templateCode .= '<script>';
	$templateCode .= '$j(function() {';


	$templateCode.="});";
	$templateCode.="</script>";
	$templateCode .= $lookups;

	// handle enforced parent values for read-only lookup fields

	// don't include blank images in lightbox gallery
	$templateCode = preg_replace('/blank.gif" data-lightbox=".*?"/', 'blank.gif"', $templateCode);

	// don't display empty email links
	$templateCode=preg_replace('/<a .*?href="mailto:".*?<\/a>/', '', $templateCode);

	/* default field values */
	$rdata = $jdata = get_defaults('products');
	if($selected_id){
		$jdata = get_joined_record('products', $selected_id);
		if($jdata === false) $jdata = get_defaults('products');
		$rdata = $row;
	}
	$templateCode .= loadView('products-ajax-cache', array('rdata' => $rdata, 'jdata' => $jdata));

	// hook: products_dv
	if(function_exists('products_dv')){
		$args=array();
		products_dv(($selected_id ? $selected_id : FALSE), getMemberInfo(), $templateCode, $args);
	}

	return $templateCode;
}
?>